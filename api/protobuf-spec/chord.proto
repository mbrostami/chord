syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

package grpc;


service Chord {
  rpc GetSuccessor(google.protobuf.Empty) returns (Node) {}
  rpc FindSuccessor(Lookup) returns (Node) {}
  rpc GetPredecessor(Node) returns (Node) {}
  rpc Notify(Node) returns (google.protobuf.BoolValue) {}
  rpc GetSuccessorList(google.protobuf.Empty) returns (Nodes) {}
  rpc GetStablizerData(Node) returns (StablizerData) {}
  rpc GetPredecessorList(Node) returns (Nodes) {}
  rpc GlobalMaintenance(Replication) returns (Replication) {}
  rpc Store(Content) returns (google.protobuf.BoolValue) {}
  rpc Fetch(Lookup) returns (Content) {}
}

message Replication {
  bytes Data = 1;
}

message Lookup {
  bytes Key = 1;
}

message MerkleNode {
  bytes Hash = 1;
  bytes Left = 2;
  bytes Right = 3;
}

message MerkleTree {
  repeated MerkleNode nodes = 1;
  bytes rootHash = 2;
}

message ForwardSyncData {
  bytes data = 1;
  bytes predecessorListHash = 2;
  MerkleTree merkleTree = 3;
}

message Content {
  bytes data = 1;
}

message Node {
  string IP = 1;
  int32 Port = 2;
}

message StablizerData {
  Node Predecessor = 1;
  repeated Node SuccessorList = 2;
}

message Nodes {
  repeated Node Nodes = 1;
}