// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dstore.proto

package dstoregrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Lookup struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Lookup) Reset()         { *m = Lookup{} }
func (m *Lookup) String() string { return proto.CompactTextString(m) }
func (*Lookup) ProtoMessage()    {}
func (*Lookup) Descriptor() ([]byte, []int) {
	return fileDescriptor_e770526ab2cecb37, []int{0}
}

func (m *Lookup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lookup.Unmarshal(m, b)
}
func (m *Lookup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lookup.Marshal(b, m, deterministic)
}
func (m *Lookup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lookup.Merge(m, src)
}
func (m *Lookup) XXX_Size() int {
	return xxx_messageInfo_Lookup.Size(m)
}
func (m *Lookup) XXX_DiscardUnknown() {
	xxx_messageInfo_Lookup.DiscardUnknown(m)
}

var xxx_messageInfo_Lookup proto.InternalMessageInfo

func (m *Lookup) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type KeyValue struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValue) Reset()         { *m = KeyValue{} }
func (m *KeyValue) String() string { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()    {}
func (*KeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_e770526ab2cecb37, []int{1}
}

func (m *KeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValue.Unmarshal(m, b)
}
func (m *KeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValue.Marshal(b, m, deterministic)
}
func (m *KeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValue.Merge(m, src)
}
func (m *KeyValue) XXX_Size() int {
	return xxx_messageInfo_KeyValue.Size(m)
}
func (m *KeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValue proto.InternalMessageInfo

func (m *KeyValue) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KeyValue) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type StoreResponse struct {
	Nodes                []*Node  `protobuf:"bytes,1,rep,name=Nodes,proto3" json:"Nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreResponse) Reset()         { *m = StoreResponse{} }
func (m *StoreResponse) String() string { return proto.CompactTextString(m) }
func (*StoreResponse) ProtoMessage()    {}
func (*StoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e770526ab2cecb37, []int{2}
}

func (m *StoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreResponse.Unmarshal(m, b)
}
func (m *StoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreResponse.Marshal(b, m, deterministic)
}
func (m *StoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreResponse.Merge(m, src)
}
func (m *StoreResponse) XXX_Size() int {
	return xxx_messageInfo_StoreResponse.Size(m)
}
func (m *StoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StoreResponse proto.InternalMessageInfo

func (m *StoreResponse) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type LookupResponse struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
	Nodes                []*Node  `protobuf:"bytes,2,rep,name=Nodes,proto3" json:"Nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupResponse) Reset()         { *m = LookupResponse{} }
func (m *LookupResponse) String() string { return proto.CompactTextString(m) }
func (*LookupResponse) ProtoMessage()    {}
func (*LookupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e770526ab2cecb37, []int{3}
}

func (m *LookupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupResponse.Unmarshal(m, b)
}
func (m *LookupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupResponse.Marshal(b, m, deterministic)
}
func (m *LookupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupResponse.Merge(m, src)
}
func (m *LookupResponse) XXX_Size() int {
	return xxx_messageInfo_LookupResponse.Size(m)
}
func (m *LookupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupResponse proto.InternalMessageInfo

func (m *LookupResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *LookupResponse) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type Node struct {
	IP                   string   `protobuf:"bytes,1,opt,name=IP,proto3" json:"IP,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=Port,proto3" json:"Port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_e770526ab2cecb37, []int{4}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *Node) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func init() {
	proto.RegisterType((*Lookup)(nil), "dstoregrpc.Lookup")
	proto.RegisterType((*KeyValue)(nil), "dstoregrpc.KeyValue")
	proto.RegisterType((*StoreResponse)(nil), "dstoregrpc.StoreResponse")
	proto.RegisterType((*LookupResponse)(nil), "dstoregrpc.LookupResponse")
	proto.RegisterType((*Node)(nil), "dstoregrpc.Node")
}

func init() {
	proto.RegisterFile("dstore.proto", fileDescriptor_e770526ab2cecb37)
}

var fileDescriptor_e770526ab2cecb37 = []byte{
	// 241 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0x29, 0x2e, 0xc9,
	0x2f, 0x4a, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x82, 0xf0, 0xd2, 0x8b, 0x0a, 0x92,
	0x95, 0xa4, 0xb8, 0xd8, 0x7c, 0xf2, 0xf3, 0xb3, 0x4b, 0x0b, 0x84, 0x04, 0xb8, 0x98, 0xbd, 0x53,
	0x2b, 0x25, 0x18, 0x15, 0x18, 0x35, 0x78, 0x82, 0x40, 0x4c, 0x25, 0x23, 0x2e, 0x0e, 0xef, 0xd4,
	0xca, 0xb0, 0xc4, 0x9c, 0xd2, 0x54, 0x4c, 0x59, 0x21, 0x11, 0x2e, 0x56, 0xb0, 0x94, 0x04, 0x13,
	0x58, 0x0c, 0xc2, 0x51, 0x32, 0xe7, 0xe2, 0x0d, 0x06, 0x19, 0x1e, 0x94, 0x5a, 0x5c, 0x90, 0x9f,
	0x57, 0x9c, 0x2a, 0xa4, 0xc6, 0xc5, 0xea, 0x97, 0x9f, 0x92, 0x5a, 0x2c, 0xc1, 0xa8, 0xc0, 0xac,
	0xc1, 0x6d, 0x24, 0xa0, 0x87, 0xb0, 0x5c, 0x0f, 0x24, 0x11, 0x04, 0x91, 0x56, 0xf2, 0xe3, 0xe2,
	0x83, 0x38, 0x04, 0xae, 0x13, 0x6e, 0x01, 0x23, 0x92, 0x05, 0x08, 0xf3, 0x98, 0xf0, 0x9b, 0xa7,
	0xc5, 0xc5, 0x02, 0x62, 0x08, 0xf1, 0x71, 0x31, 0x79, 0x06, 0x80, 0x8d, 0xe0, 0x0c, 0x62, 0xf2,
	0x0c, 0x10, 0x12, 0xe2, 0x62, 0x09, 0xc8, 0x2f, 0x2a, 0x01, 0xbb, 0x9a, 0x35, 0x08, 0xcc, 0x36,
	0xaa, 0xe5, 0x62, 0x73, 0x01, 0xbb, 0x5a, 0xc8, 0x8a, 0x8b, 0x15, 0xc2, 0x10, 0x41, 0x36, 0x17,
	0x16, 0x0a, 0x52, 0x92, 0xc8, 0xa2, 0x28, 0xfe, 0x54, 0x62, 0x10, 0x32, 0xe7, 0x62, 0x76, 0x4f,
	0x2d, 0x11, 0x12, 0x42, 0x56, 0x03, 0xf1, 0x92, 0x94, 0x14, 0xa6, 0x18, 0x42, 0x63, 0x12, 0x1b,
	0x38, 0x5a, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3d, 0xcb, 0x42, 0xce, 0xa6, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DStoreClient is the client API for DStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DStoreClient interface {
	Store(ctx context.Context, in *KeyValue, opts ...grpc.CallOption) (*StoreResponse, error)
	Get(ctx context.Context, in *Lookup, opts ...grpc.CallOption) (*LookupResponse, error)
}

type dStoreClient struct {
	cc grpc.ClientConnInterface
}

func NewDStoreClient(cc grpc.ClientConnInterface) DStoreClient {
	return &dStoreClient{cc}
}

func (c *dStoreClient) Store(ctx context.Context, in *KeyValue, opts ...grpc.CallOption) (*StoreResponse, error) {
	out := new(StoreResponse)
	err := c.cc.Invoke(ctx, "/dstoregrpc.DStore/Store", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dStoreClient) Get(ctx context.Context, in *Lookup, opts ...grpc.CallOption) (*LookupResponse, error) {
	out := new(LookupResponse)
	err := c.cc.Invoke(ctx, "/dstoregrpc.DStore/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DStoreServer is the server API for DStore service.
type DStoreServer interface {
	Store(context.Context, *KeyValue) (*StoreResponse, error)
	Get(context.Context, *Lookup) (*LookupResponse, error)
}

// UnimplementedDStoreServer can be embedded to have forward compatible implementations.
type UnimplementedDStoreServer struct {
}

func (*UnimplementedDStoreServer) Store(ctx context.Context, req *KeyValue) (*StoreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Store not implemented")
}
func (*UnimplementedDStoreServer) Get(ctx context.Context, req *Lookup) (*LookupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterDStoreServer(s *grpc.Server, srv DStoreServer) {
	s.RegisterService(&_DStore_serviceDesc, srv)
}

func _DStore_Store_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DStoreServer).Store(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dstoregrpc.DStore/Store",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DStoreServer).Store(ctx, req.(*KeyValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _DStore_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Lookup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DStoreServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dstoregrpc.DStore/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DStoreServer).Get(ctx, req.(*Lookup))
	}
	return interceptor(ctx, in, info, handler)
}

var _DStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dstoregrpc.DStore",
	HandlerType: (*DStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Store",
			Handler:    _DStore_Store_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _DStore_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dstore.proto",
}
